// @generated by protobuf-ts 2.9.0
// @generated from protobuf file "car/service.proto" (package "car", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { CarService } from "./service";
import type { DeleteCarResponse } from "./request";
import type { DeleteCarRequest } from "./request";
import type { UpdateCarResponse } from "./request";
import type { UpdateCarRequest } from "./request";
import type { CreateCarResponse } from "./request";
import type { CreateCarRequest } from "./request";
import type { GetCarResponse } from "./request";
import type { GetCarRequest } from "./request";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListCarsResponse } from "./request";
import type { ListCarsRequest } from "./request";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service car.CarService
 */
export interface ICarServiceClient {
    /**
     * @generated from protobuf rpc: ListCars(car.ListCarsRequest) returns (car.ListCarsResponse);
     */
    listCars(input: ListCarsRequest, options?: RpcOptions): UnaryCall<ListCarsRequest, ListCarsResponse>;
    /**
     * @generated from protobuf rpc: GetCar(car.GetCarRequest) returns (car.GetCarResponse);
     */
    getCar(input: GetCarRequest, options?: RpcOptions): UnaryCall<GetCarRequest, GetCarResponse>;
    /**
     * @generated from protobuf rpc: CreateCar(car.CreateCarRequest) returns (car.CreateCarResponse);
     */
    createCar(input: CreateCarRequest, options?: RpcOptions): UnaryCall<CreateCarRequest, CreateCarResponse>;
    /**
     * @generated from protobuf rpc: UpdateCar(car.UpdateCarRequest) returns (car.UpdateCarResponse);
     */
    updateCar(input: UpdateCarRequest, options?: RpcOptions): UnaryCall<UpdateCarRequest, UpdateCarResponse>;
    /**
     * @generated from protobuf rpc: DeleteCar(car.DeleteCarRequest) returns (car.DeleteCarResponse);
     */
    deleteCar(input: DeleteCarRequest, options?: RpcOptions): UnaryCall<DeleteCarRequest, DeleteCarResponse>;
}
/**
 * @generated from protobuf service car.CarService
 */
export class CarServiceClient implements ICarServiceClient, ServiceInfo {
    typeName = CarService.typeName;
    methods = CarService.methods;
    options = CarService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ListCars(car.ListCarsRequest) returns (car.ListCarsResponse);
     */
    listCars(input: ListCarsRequest, options?: RpcOptions): UnaryCall<ListCarsRequest, ListCarsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListCarsRequest, ListCarsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetCar(car.GetCarRequest) returns (car.GetCarResponse);
     */
    getCar(input: GetCarRequest, options?: RpcOptions): UnaryCall<GetCarRequest, GetCarResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetCarRequest, GetCarResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateCar(car.CreateCarRequest) returns (car.CreateCarResponse);
     */
    createCar(input: CreateCarRequest, options?: RpcOptions): UnaryCall<CreateCarRequest, CreateCarResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateCarRequest, CreateCarResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateCar(car.UpdateCarRequest) returns (car.UpdateCarResponse);
     */
    updateCar(input: UpdateCarRequest, options?: RpcOptions): UnaryCall<UpdateCarRequest, UpdateCarResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateCarRequest, UpdateCarResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteCar(car.DeleteCarRequest) returns (car.DeleteCarResponse);
     */
    deleteCar(input: DeleteCarRequest, options?: RpcOptions): UnaryCall<DeleteCarRequest, DeleteCarResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteCarRequest, DeleteCarResponse>("unary", this._transport, method, opt, input);
    }
}
