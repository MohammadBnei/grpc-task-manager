syntax = "proto3";

package car.v1beta;

message Car {
  string name = 1;
  repeated Field fields = 2;
  string due_date = 3;
  bool done = 4;
}

message Field {
  string name = 1;
  string value = 2;
  FieldType type = 3;
}

service CarService {
  rpc ListCars(ListCarsRequest) returns (ListCarsResponse) {}
  rpc GetCar(GetCarRequest) returns (CarResponse) {}
  rpc CreateCar(CreateCarRequest) returns (CarResponse) {}
  rpc UpdateCar(UpdateCarRequest) returns (CarResponse) {}
  rpc DeleteCar(DeleteCarRequest) returns (CarResponse) {}

  rpc UpdateDate(UpdateDateRequest) returns (CarResponse) {}

  rpc StreamCars(StreamCarsRequest) returns (stream StreamCarsResponse) {}
}

service FieldService {
  rpc AddField(AddFieldRequest) returns (CarResponse) {}
  rpc RemoveField(RemoveFieldRequest) returns (CarResponse) {}
}

service UsageService {
  rpc Using(UsageRequest) returns (UsageResponse) {}
  rpc UsingStream(UsageRequest) returns (stream UsageResponse) {}
}

enum FieldType {
  FIELD_TYPE_STRING = 0;
}

message AddFieldRequest {
  string car_name = 1;
  string field_name = 2;
  string field_value = 3;
  FieldType field_type = 4;
}

message UpdateDateRequest {
  string car_name = 1;
  string due_date = 2;
}

message RemoveFieldRequest {
  string car_name = 1;
  string field_name = 2;
}

enum EventType {
  EVENT_TYPE_CLICK = 0;
  EVENT_TYPE_CREATE = 1;
  EVENT_TYPE_UPDATE = 2;
  EVENT_TYPE_DELETE = 3;
}

message UsageRequest {
  string username = 1;
  string car_name = 2;
  EventType event_type = 3;
}

message UsageResponse {
  string username = 1;
  string car_name = 2;
  EventType event_type = 3;
}

message StreamCarsRequest {}

message StreamCarsResponse {
  Car car = 1;
  string event_type = 2;
}

message ListCarsRequest {
  // The parent resource name, for example, "shelves/shelf1"
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListCarsResponse {
  // The field name should match the noun "Car" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated Car cars = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetCarRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}
message CarResponse {
  Car car = 1;
}

message CreateCarRequest {
  // The parent resource name where the Car is to be created.
  string parent = 1;

  // The Car id to use for this Car.
  string car_id = 2;

  // The Car resource to create.
  // The field name should match the Noun in the method name.
  Car car = 3;
}

message UpdateCarRequest {
  // The Car resource which replaces the resource on the server.
  Car car = 1;
}

message DeleteCarRequest {
  // The resource name of the Car to be deleted.
  string name = 1;
}
