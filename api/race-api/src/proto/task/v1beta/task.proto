syntax = "proto3";

package race.v1beta;

message Race {
  string name = 1;
  repeated Field fields = 2;
  string due_date = 3;
  bool done = 4;
}

message Field {
  string name = 1;
  string value = 2;
  FieldType type = 3;
}

service RaceService {
  rpc ListRaces(ListRacesRequest) returns (ListRacesResponse) {}
  rpc GetRace(GetRaceRequest) returns (RaceResponse) {}
  rpc CreateRace(CreateRaceRequest) returns (RaceResponse) {}
  rpc UpdateRace(UpdateRaceRequest) returns (RaceResponse) {}
  rpc DeleteRace(DeleteRaceRequest) returns (RaceResponse) {}

  rpc UpdateDate(UpdateDateRequest) returns (RaceResponse) {}

  rpc StreamRaces(StreamRacesRequest) returns (stream StreamRacesResponse) {}
}

service FieldService {
  rpc AddField(AddFieldRequest) returns (RaceResponse) {}
  rpc RemoveField(RemoveFieldRequest) returns (RaceResponse) {}
}

service UsageService {
  rpc Using(UsageRequest) returns (UsageResponse) {}
  rpc UsingStream(UsageRequest) returns (stream UsageResponse) {}
}

enum FieldType {
  FIELD_TYPE_STRING = 0;
}

message AddFieldRequest {
  string race_name = 1;
  string field_name = 2;
  string field_value = 3;
  FieldType field_type = 4;
}

message UpdateDateRequest {
  string race_name = 1;
  string due_date = 2;
}

message RemoveFieldRequest {
  string race_name = 1;
  string field_name = 2;
}

enum EventType {
  EVENT_TYPE_CLICK = 0;
  EVENT_TYPE_CREATE = 1;
  EVENT_TYPE_UPDATE = 2;
  EVENT_TYPE_DELETE = 3;
}

message UsageRequest {
  string username = 1;
  string race_name = 2;
  EventType event_type = 3;
}

message UsageResponse {
  string username = 1;
  string race_name = 2;
  EventType event_type = 3;
}

message StreamRacesRequest {}

message StreamRacesResponse {
  Race race = 1;
  string event_type = 2;
}

message ListRacesRequest {
  // The parent resource name, for example, "shelves/shelf1"
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListRacesResponse {
  // The field name should match the noun "Race" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated Race races = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetRaceRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}
message RaceResponse {
  Race race = 1;
}

message CreateRaceRequest {
  // The parent resource name where the Race is to be created.
  string parent = 1;

  // The Race id to use for this Race.
  string race_id = 2;

  // The Race resource to create.
  // The field name should match the Noun in the method name.
  Race race = 3;
}

message UpdateRaceRequest {
  // The Race resource which replaces the resource on the server.
  Race race = 1;
}

message DeleteRaceRequest {
  // The resource name of the Race to be deleted.
  string name = 1;
}
